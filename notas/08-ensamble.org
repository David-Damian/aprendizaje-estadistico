#+TITLE: EST-25134: Aprendizaje Estadístico
#+AUTHOR: Prof. Alfredo Garbuno Iñigo
#+EMAIL:  agarbuno@itam.mx
#+DATE: ~Modelos de ensamble~
#+STARTUP: showall
:REVEAL_PROPERTIES:
#+LANGUAGE: es
#+OPTIONS: num:nil toc:nil timestamp:nil
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: night
#+REVEAL_SLIDE_NUMBER: t
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="Aprendizaje Estadístico">
#+REVEAL_INIT_OPTIONS: width:1600, height:900, margin:.2
#+REVEAL_EXTRA_CSS: ./mods.css
#+REVEAL_PLUGINS: (notes)
:END:
:LATEX_PROPERTIES:
#+OPTIONS: toc:nil date:nil author:nil tasks:nil
#+LANGUAGE: sp
#+LATEX_CLASS: handout
#+LATEX_HEADER: \usepackage[spanish]{babel}
#+LATEX_HEADER: \usepackage[sort,numbers]{natbib}
#+LATEX_HEADER: \usepackage[utf8]{inputenc} 
#+LATEX_HEADER: \usepackage[capitalize]{cleveref}
#+LATEX_HEADER: \decimalpoint
#+LATEX_HEADER:\usepackage{framed}
#+LaTeX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage{fancyvrb}
#+LATEX_HEADER: \usepackage{xcolor}
#+LaTeX_HEADER: \definecolor{backcolour}{rgb}{.95,0.95,0.92}
#+LaTeX_HEADER: \definecolor{codegray}{rgb}{0.5,0.5,0.5}
#+LaTeX_HEADER: \definecolor{codegreen}{rgb}{0,0.6,0} 
#+LaTeX_HEADER: {}
#+LaTeX_HEADER: {\lstset{language={R},basicstyle={\ttfamily\footnotesize},frame=single,breaklines=true,fancyvrb=true,literate={"}{{\texttt{"}}}1{<-}{{$\bm\leftarrow$}}1{<<-}{{$\bm\twoheadleftarrow$}}1{~}{{$\bm\sim$}}1{<=}{{$\bm\le$}}1{>=}{{$\bm\ge$}}1{!=}{{$\bm\neq$}}1{^}{{$^{\bm\wedge}$}}1{|>}{{$\rhd$}}1,otherkeywords={!=, ~, $, \&, \%/\%, \%*\%, \%\%, <-, <<-, ::, /},extendedchars=false,commentstyle={\ttfamily \itshape\color{codegreen}},stringstyle={\color{red}}}
#+LaTeX_HEADER: {}
#+LATEX_HEADER_EXTRA: \definecolor{shadecolor}{gray}{.95}
#+LATEX_HEADER_EXTRA: \newenvironment{NOTES}{\begin{lrbox}{\mybox}\begin{minipage}{0.95\textwidth}\begin{shaded}}{\end{shaded}\end{minipage}\end{lrbox}\fbox{\usebox{\mybox}}}
#+EXPORT_FILE_NAME: ../docs/08-ensamble.pdf
:END:
#+PROPERTY: header-args:R :session ensamble :exports both :results output org :tangle rscripts/08-ensamble.R :mkdirp yes :dir ../
#+EXCLUDE_TAGS: toc

#+BEGIN_NOTES
*Profesor*: Alfredo Garbuno Iñigo | Primavera, 2022 | Modelos por ensamble.\\
*Objetivo*: Que veremos.\\
*Lectura recomendada*: Sección 8.2 de citep:James2021. 
#+END_NOTES


#+begin_src R :exports none :results none
  ## Setup --------------------------------------------
  library(tidyverse)
  library(patchwork)
  library(scales)
  ## Cambia el default del tamaño de fuente 
  theme_set(theme_linedraw(base_size = 25))

  ## Cambia el número de decimales para mostrar
  options(digits = 2)

  sin_lineas <- theme(panel.grid.major = element_blank(),
  panel.grid.minor = element_blank())
  color.itam  <- c("#00362b","#004a3b", "#00503f", "#006953", "#008367", "#009c7b", "#00b68f", NA)

  sin_lineas <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
  sin_leyenda <- theme(legend.position = "none")
  sin_ejes <- theme(axis.ticks = element_blank(), axis.text = element_blank())
#+end_src


* Contenido                                                             :toc:
:PROPERTIES:
:TOC:      :include all  :ignore this :depth 3
:END:
:CONTENTS:
- [[#introducción][Introducción]]
- [[#remuestreo-o-bootstrap][Remuestreo o bootstrap]]
  - [[#para-pensar][Para pensar:]]
:END:

* Introducción 

Anteriormente, vimos los modelos predictivos basados en ~árboles de decisión~ (regresión y clasificación). En esta sección del curso estudiaremos ~distintas estrategias~ para combinarlos para obtener un mejor modelo predictivo al costo de ~interpretabilidad~. Algunos de estos modelos continúan representando el estado del arte en competencias como [[https://www.kaggle.com/][Kaggle]] para ~datos tabulares~.


#+DOWNLOADED: screenshot @ 2022-04-13 15:27:21
#+caption: Algoritmos que tienden a quedar en los primeros lugares en las competencias de Kaggle. Tomado de [[https://www.kaggle.com/code/msjgriffiths/r-what-algorithms-are-most-successful-on-kaggle/report?scriptVersionId=0][aquí]]. 
#+attr_html: :width 400 :align center
[[file:images/20220413-152721_screenshot.png]]


* Remuestreo o /bootstrap/

Utilizar técnicas de remuestreo nos permite cuantificar la variabilidad de un estimador estadístico sin necesidad de invocar un régimen asintótico para el procedimiento. Asimismo, nos permite controlar, hasta cierto punto, la variabilidad de nuestros estimadores.

#+REVEAL: split
Por ejemplo, consideremos la situación en donde tenemos una muestra de $n$ observaciones $Z_1, \ldots, Z_n$ las cuales tienen una varianza $\sigma^2$. Es fácil demostrar que la varianza de la media $\bar Z_n$ tiene una varianza $\sigma^2/n$.

#+REVEAL: split
Esto quiere decir, que podemos promediar para reducir la varianza estimada.

*** Para pensar:
:PROPERTIES:
:reveal_background: #00468b
:END:
Usualmente no tenemos acceso al proceso generador de datos (ya sea $\pi_{X,Y}$ ó $\pi_X$). ¿Qué estrategia podemos utilizar? 

** /Bootstrap/

Podemos utilizar la muestra $z_1, \ldots, z_n \overset{\mathsf{iid}}{\sim} \pi$ como un /proxy/ de la población de la cual queremos generar observaciones. En este sentido, consideramos que la función de acumulación empírica (~ECDF~, por sus siglas en inglés) es un /buen/ estimador de la función de probabilidad (ó ~CDF~ por sus siglas en inglés)
\begin{align}
\pi[X  \leq x] \approx {\hat \pi}_n[X  \leq x] = \frac1n \sum_{i = 1}^{n} I_{[z_i  \leq x]}\,.
\end{align}

#+REVEAL: split
Con este procedimiento podemos generar $B$ conjuntos de datos
\begin{align}
z_1^{(b)}, \ldots, z_n^{(b)} \sim \hat \pi_n\,, \qquad b = 1, \ldots, B\,,
\end{align}
para obtener estimadores $\hat \theta^{(b)}_n = t(z_1^{(b)}, \ldots, z_n^{(b)})$ y, a través de un promedio, obtener un estimador
\begin{align}
\bar \theta_{B,n}^{(\mathsf{bag})} = \frac1B \sum_{b= 1}^{B} \hat \theta^{(b)}_n \,,
\end{align}
con varianza que se reduce a una tasa $1/B$.

#+BEGIN_NOTES
El muestreo $z_1^{(b)}, \ldots, z_n^{(b)} \sim \hat \pi_n$ implica tomar muestras *con* reemplazo del conjunto de datos observado. Nota que las remuestras son del mismo tamaño que la muestra original. Es decir, cada remuestra $b$ tiene $n$ observaciones. Como el procedimiento es con reemplazo, esto puede ocasionar que pueda haber algunas observaciones que repitan en la remuestra.  
#+END_NOTES


** Ejemplo: Suavizadores

La estrategia de remuestreo nos puede ayudar a cuantificar la estabilidad de
ciertos estimadores. Por ejemplo, consideremos los datos que teníamos sobre el
ingreso para un conjunto de 150 observaciones. El interés es construir un
suavizador que relacione ~Edad~ con ~Ingreso~. Utilizaremos un suavizador de /splines/
con 15 grados de libertad, ver [[fig:splines-smooth]].

#+begin_src R :exports none :results none 
  library(ISLR)
  set.seed(108727)
  ## Cargamos datos
  data <- tibble(Wage) |> select(year, age, wage, education) |>
    mutate(hi.income = ifelse(wage > 250, 1, 0),
           age = as.numeric(age)) |>
    sample_frac(.05)
#+end_src

#+REVEAL: split
#+HEADER: :width 900 :height 400 :R-dev-args bg="transparent"
#+begin_src R :file images/splines-bootstrap.jpeg :exports results :results output graphics file
  library(ggformula)
  g1.ssplines <- data |>
    ggplot(aes(age, wage)) +
    geom_point(color = "gray") +
    geom_spline(aes(age, wage, color = "Suavizamiento"),
              df = 15, 
              color = 'red',
              lty = 1,
              show.legend = TRUE) + 
    sin_lineas +
    ## scale_x_continuous(limits = c(10, 80), expand = c(0,0)) +
    xlab("Edad") + ylab("Ingreso") + ggtitle("df = 15")
    coord_cartesian(ylim = c(0, 300))
  g1.ssplines
#+end_src
#+name: fig:splines-smooth
#+caption: Suavizador por /splines/ con 15 grados de libertad. 
#+RESULTS:
[[file:../images/splines-bootstrap.jpeg]]

#+REVEAL: split
A través de remuestreo podemos cuantificar la estabilidad de dicha estimación.

#+HEADER: :width 900 :height 400 :R-dev-args bg="transparent"
#+begin_src R :file images/wage-splines-bootstrap.jpeg :exports results :results output graphics file
  library("rsample")
  ajusta_boot <- function(id){
    ## Creo remuestra
    data.boot <- data |>
      slice_sample(prop = 1, replace = TRUE)
    ## Ajusto modelo 
    model <- smooth.spline(y = data.boot$wage, x = data.boot$age, df = 15)
    ## Hago predicciones y las regreso (ojo no extrapola)
    predict(model, newdata = tibble(age = seq(20, 80))) |>
      as_tibble()
  }

  boot.fit <- tibble(id = 1:100) |>
    mutate(resultados = map(id, ajusta_boot))

  g1.ssplines + 
    geom_line(data = unnest(boot.fit, resultados),
              aes(x, y, group = id),
              color = 'lightblue', alpha = .2) +
    geom_spline(aes(age, wage, color = "Suavizamiento"),
                df = 15, 
                color = 'red',
                lty = 1,
                show.legend = TRUE)
#+end_src
#+name: fig:splines-boot
#+caption: Suavizador por /splines/ con 15 grados de libertad, réplicas con remuestreo. 
#+RESULTS:
[[file:../images/wage-splines-bootstrap.jpeg]]

** En contexto



bibliographystyle:abbrvnat
bibliography:references.bib


